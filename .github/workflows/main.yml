# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on: [push, pull_request, workflow_dispatch]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk:13
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a set of commands using the runners shell
      - name: Compile Java Classes
        run: 
          cd Projects/P2
          ./gradlew build testClasses -x test

  pacman:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk:13
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a set of commands using the runners shell
      - name: Test Pacman
        run: |
          ./gradlew build testClasses -x test
          ./gradlew test --tests TestPacManConsume
          ./gradlew test --tests TestPacManInRange
          ./gradlew test --tests TestPacManMove
          ./gradlew test --tests testPacManValidMoves
  ghost:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk:13
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a set of commands using the runners shell
      - name: Test Ghost
        run: |
          ./gradlew build testClasses -x test
          ./gradlew test --tests TestGhostAttack
          ./gradlew test --tests TestGhostInRange
          ./gradlew test --tests TestGhostMove
          ./gradlew test --tests TestGhostValidMove
  map:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk:13
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a set of commands using the runners shell
      - name: Test Map
        run: |
          ./gradlew build testClasses -x test
          ./gradlew test --tests TestMapAttack
          ./gradlew test --tests TestMapEatCookie
          ./gradlew test --tests TestMapGetLoc
          ./gradlew test --tests TestMapMove
          
